#ifndef Ctokens_h
#define Ctokens_h
/* Ctokens.h -- List of labelled tokens and stuff
 *
 * Generated from: cccc.g
 *
 * Terence Parr, Will Cohen, and Hank Dietz: 1989-1999
 * Purdue University Electrical Engineering
 * ANTLR Version 1.33MR20
 */
enum ANTLRTokenType {
	Eof=1,
	WHITESPACE=2,
	DOS_NL=3,
	MAC_NL=4,
	UNIX_NL=5,
	HASH=6,
	DOS_P_EOL=7,
	MAC_P_EOL=8,
	UNIX_P_EOL=9,
	P_LINECONT=10,
	P_ANYTHING=11,
	P_COMMULTI=12,
	RR_DIRECTIVE=13,
	RR_ANYTHING=14,
	RR_END=15,
	COMDEF=16,
	COMLINE=17,
	NOCCCC=18,
	NOSONAR=19,
	COMLINE_END=20,
	COMLINE_ANYTHING=21,
	COMMULTI=22,
	COMMULTI_END=23,
	JAVADOC_EOL=24,
	JAVADOC_ANYTHING=25,
	COMMULTI_EOL=26,
	COMMULTI_ANYTHING=27,
	STRINGSTART=28,
	STRINGCONST=29,
	LYNNS_FIX=30,
	ESCAPED_DQUOTE=31,
	ESCAPED_OTHER=32,
	S_ANYTHING=33,
	CHARSTART=34,
	CHARCONST=35,
	CH_ANYTHING=36,
	LBRACE=37,
	RBRACE=38,
	LPAREN=39,
	RPAREN=40,
	LBRACK=41,
	RBRACK=42,
	ASM=43,
	AUTO=44,
	BREAK=45,
	CASE=46,
	CATCH=47,
	KW_CHAR=48,
	CLASS=49,
	KW_CONST=50,
	CONTINUE=51,
	DEFAULT=52,
	DELETE=53,
	DO=54,
	KW_DOUBLE=55,
	ELSE=56,
	ENUM=57,
	EXTERN=58,
	KW_FLOAT=59,
	FOR=60,
	FRIEND=61,
	GOTO=62,
	IF=63,
	INLINE=64,
	KW_INT=65,
	KW_LONG=66,
	NEW=67,
	OPERATOR=68,
	PRIVATE=69,
	PROTECTED=70,
	PUBLIC=71,
	REGISTER=72,
	RETURN=73,
	KW_SHORT=74,
	SIGNED=75,
	SIZEOF=76,
	STATIC=77,
	STRUCT=78,
	SWITCH=79,
	TEMPLATE=80,
	KW_THIS=81,
	THROW=82,
	TRY=83,
	TYPEDEF=84,
	UNION=85,
	UNSIGNED=86,
	VIRTUAL=87,
	KW_VOID=88,
	VOLATILE=89,
	WHILE=90,
	AAAAA=91,
	ASSIGN_OP=95,
	GREATERTHAN=110,
	LESSTHAN=111,
	GREATEREQUAL=112,
	LESSEQUAL=113,
	ASTERISK=115,
	LOGICAL_AND_OP=129,
	LOGICAL_OR_OP=130,
	LOGICAL_NOT_OP=131,
	QUERY_OP=132,
	AMPERSAND=133,
	PIPE=134,
	TILDA=135,
	COLONCOLON=137,
	ARROW=138,
	COLON=139,
	PERIOD=140,
	COMMA=141,
	SEMICOLON=142,
	NAMESPACE=143,
	USING=144,
	AND=145,
	AND_EQ=146,
	BITAND=147,
	BITOR=148,
	COMPL=149,
	NOT=150,
	OR=151,
	OR_EQ=152,
	XOR=153,
	XOR_EQ=154,
	KW_BOOL=155,
	BTRUE=156,
	BFALSE=157,
	STATIC_CAST=158,
	REINTERPRET_CAST=159,
	CONST_CAST=160,
	DYNAMIC_CAST=161,
	TYPEID=162,
	IMPLEMENTATION_KEYWORD=163,
	IDENTIFIER=164,
	OCT_NUM=165,
	L_OCT_NUM=166,
	INT_NUM=167,
	L_INT_NUM=168,
	HEX_NUM=169,
	L_HEX_NUM=170,
	FNUM=171,
	ANYTHING=172,
	Start=174,
	Link_item=175,
	End_of_file=176,
	Definition_or_declaration=177,
	Resync_tokens=178,
	Extern_linkage_block=179,
	Namespace_block=180,
	Using_statement=181,
	Explicit_template_instantiation=182,
	Class_declaration_or_definition=183,
	Class_suffix=184,
	Class_suffix_trailer=185,
	Opt_instance_list=186,
	Union_definition=187,
	Anonymous_union_definition=188,
	Named_union_definition=189,
	Enum_definition=190,
	Anonymous_enum_definition=191,
	Named_enum_definition=192,
	Instance_declaration=193,
	Class_block=194,
	Class_block_item_list=195,
	Class_block_item=196,
	Class_item_qualifier_list=197,
	Class_item_qualifier=198,
	Access_modifier=199,
	Method_declaration_or_definition_with_implicit_type=200,
	Method_declaration_or_definition_with_explicit_type=201,
	Method_suffix=202,
	Method_signature=203,
	Type=204,
	Cv_qualifier=205,
	MUTABLE=206,
	Type_name=207,
	Indirection_modifiers=208,
	Indirection_modifier=209,
	Builtin_type=210,
	Type_keyword=211,
	User_type=212,
	Scoped_member_name=213,
	Scoped_identifier=214,
	Explicit_scope_spec=215,
	Unscoped_member_name=216,
	Dtor_member_name=217,
	Operator_member_name=218,
	Operator_identifier=219,
	New_or_delete=220,
	Param_list=221,
	Param_list_items=222,
	More_param_items=223,
	Param_item=224,
	Param_type=225,
	Param_spec=226,
	Knr_param_decl_list=227,
	Opt_const_modifier=228,
	Typedef_definition=229,
	Fptr_typedef_definition=230,
	Struct_typedef_definition=231,
	Simple_typedef_definition=232,
	Identifier_opt=233,
	Tag_list_opt=234,
	Tag=235,
	Simple_type_alias=236,
	Fptr_type_alias=237,
	Class_or_method_declaration_or_definition=238,
	Class_prefix=239,
	Inheritance_list=240,
	Inheritance_item_list=241,
	Inheritance_access_key=242,
	Inheritance_item=243,
	Class_key=244,
	Access_key=245,
	Ctor_init_list=246,
	Ctor_init_item_list=247,
	Ctor_init_item=248,
	Linkage_qualifiers=249,
	Linkage_qualifier=250,
	Identifier_or_brace_block_or_both=251,
	Opt_brace_block=252,
	Instance_item=253,
	Item_specifier=254,
	Opt_initializer=255,
	Init_expr=256,
	Init_expr_item=257,
	Cast_keyword=258,
	Init_value=259,
	Keyword=260,
	EXPLICIT=261,
	Op=262,
	Constant=263,
	Literal=264,
	String_literal=265,
	Block=266,
	Balanced=267,
	Balanced_list=268,
	Nested_token_list=269,
	Nested_token=270,
	Scoped=272,
	Brace_block=273,
	Skip_until_matching_rbrace=274,
	Paren_block=275,
	Brack_block=276,
	Brack_list=277,
	Angle_balanced_list=278,
	Angle_block=279,
	TOKENTYPE_MAX=280,
	DLGminToken=0,
	DLGmaxToken=9999};

#endif
